<!DOCTYPE html>
<html>

<head>
	<title>Perustiedot </title>
	<meta charset="UTF-8">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
	<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
	<link href="/Metro-UI-CSS-master/build/css/metro.css" rel="stylesheet">
	<link href="/Metro-UI-CSS-master/build/css/metro-icons.css" rel="stylesheet">
	<link href="/css/basicinfo.css" rel="stylesheet">
	<link href="/css/styles.css" rel="stylesheet">
	
</head>

<body id="grad">
	<div class="jumbotron">
		<h1 class="text-center" style="font-size: 5.5em; margin: 30px 0px 30px 0px; color: black;">Anna perustietosi</h1>
	</div>

	<form data-role="validator" class="container userData" data-on-submit="return false">
		<div class="input-control text row" data-role="keypad">
			<input data-validate-func="max, required" data-validate-arg="100" data-validate-hint="Invalid or no value!" type="text" placeholder="Ikä"
			 id="age">
			<span class="input-state-error mif-warning"></span>
			<span class="input-state-success mif-checkmark"></span>
		</div>
		<div class="input-control text row" data-role="keypad">
			<input type="text" id="height" placeholder="Pituus" data-validate-func="max, required" data-validate-arg="250" data-validate-hint="Invalid or no value!">
			<span class="input-state-error mif-warning"></span>
			<span class="input-state-success mif-checkmark"></span>
		</div>
		<div data-role="group" data-group-type="one-state" class="gender">
			<input type="button" class="button" value="Mies" />
			<input type="button" class="button" value="Nainen" />
		</div>
		<div class="row" style="margin-top: 60px;">
			<div class="col-md-6"><a href="/" id="cancel"><span class="mif-chevron-thin-left"></span> Keskeytä</a></div>
			<button class="col-md-6 button next"><a id="sendData">Seuraava <span class="mif-chevron-thin-right"></span></a></button>
		</div>
		<button><a href="/selectDevices"> Debug seuraava</a></button>
	</form>


	<script src="/Metro-UI-CSS-master/build/js/metro.js"></script>
	
	<script>
		var util = require('util');
		var exec = require('child_process').exec;
		var fs = require('fs');
		const remote = require('electron').remote;
		const app = remote.app;

		// pcModeExec = "M1";
		// clothesWeightExec = "D0";
		// genderExec = "D1";
		// bodytypeExec = "D2";
		// heightExec = "D3";
		// ageExec = "D4"
		// startExec = "G";

		// clicking Seuraava executes a function:
		$('#sendData').on('click', sendData);
		//reset the given variables:
		$('#cancel').on('click', resetVariables);

		// function sends user's data to the console:
		function sendData() {
			age = document.getElementById("age").value;
			height = document.getElementById("height").value;
			gender = $(".active").val();

			if (gender === "Mies") {
				gender = 1;
			} else if (gender === "Nainen") {
				gender = 2;
			} else {
				gender = none;
			}

			if ((age > 4 && age < 99) && (height > 89 && height < 249) && (gender === 1 || gender === 2)) {
				var allDone = false;

				/////////////////////////////
				//
				// 	SEND COMMANDS TO TANITA
				//
				/////////////////////////////

				exec("echo 'M1\n' > /dev/ttyUSB0", function (error, stdout, stderr) { });		// Extra exec to "wake up" the machine to respond to next execs

				// BODYTYPE
				exec("echo 'D20\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
					console.log('stdout: ' + stdout);
					console.log('stderr: ' + stderr);
					if (error !== null) {
						console.log('exec error: ' + error);
					}
				});

				// CLOTHES WEIGHT
				exec("echo 'D001.5\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
					console.log('stdout: ' + stdout);
					console.log('stderr: ' + stderr);
					if (error !== null) {
						console.log('exec error: ' + error);
					}
				});

				// GENDER
				exec("echo 'D1" + gender + "\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
					console.log('stdout: ' + stdout);
					console.log('stderr: ' + stderr);
					if (error !== null) {
						console.log('exec error: ' + error);
					}
				});

				// AGE
				exec("echo 'D4" + age + "\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
					console.log('stdout: ' + stdout);
					console.log('stderr: ' + stderr);
					if (error !== null) {
						console.log('exec error: ' + error);
					}
				});

				// HEIGHT
				exec("echo 'D3" + height + "\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
					console.log('stdout: ' + stdout);
					console.log('stderr: ' + stderr);
					if (error !== null) {
						console.log('exec error: ' + error);
					}
				});

				// Use timeout to make sure the putty log file exists and has been saved
				setTimeout(function () {
					allDone = checkTanitaResponse();
					if (allDone) {
						window.location = "http://127.0.0.1:3000/selectDevices";
					}
				}, 100);

				// after exec, go to selectDevices view:
				//window.location = "http://127.0.0.1:3000/selectDevices";
			}
		}

		function resetVariables() {
			exec("echo 'Q\n' > /dev/ttyUSB0", function (error, stdout, stderr) {
				console.log('stdout: ' + stdout);
				console.log('stderr: ' + stderr);
				if (error !== null) {
					console.log('exec error: ' + error);
				}
			});
		}

		function checkTanitaResponse() 
		{
			var text = readResponses();
			

			if (text.includes("@") && text.includes("D2") && text.includes("D0") && text.includes("D1") && text.includes("D4") && text.includes("D3")) {
				app.console.log("File read, all Tanita responses found!")
				return true;
			}
			else if (text !== null)
			{
				app.console.log("Not all Tanita responses found!");
			}
			else {
				app.console.log("I/O Error :---DD")
				return false;
			}
		}

		function readResponses()
		{
			var text;
			
				try 
				{
					text = fs.readFileSync('/home/kuutio/mittauskuutio/data.txt', 'utf8');
					
				}
				catch (error) 
				{
					app.console.log("Problem reading file. Terminating and restarting putty.");
					exec("killall putty");
					exec("putty -load 'Mittauskuutio'");
				}

				return text;
			
		}

	</script>
</body>

</html>